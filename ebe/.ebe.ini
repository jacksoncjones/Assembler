[General]
bg_color=#ffffd8
break_bg=#ff0000
break_fg=#00ffff
bsd=false
button_blue=#000080
button_green=#006000
button_red=#800000
command_line=
comment_fg=#0000e0
continue_color=#00a000
cursor=0
cursor_flash=1000
debugger=lldb
find_bg=#a0a0f0
find_fg=#a00000
fixed_font=Courier
font_size=13
id_fg=#0000a0
illegal_bg=#ffc0ff
illegal_fg=#000000
instruction_fg=#007090
language=asm
language_code=en
language_name=English
linux=false
list_bg=#e0f0ff
mac=true
macro_fg=#d00080
next_bg=#b0ffff
next_color=#0000c0
next_fg=#ff0000
numbers_bg=#f8f8dc
numbers_fg=#000078
numeric_fg=#80o080
operator_fg=#008860
os=mac
preprocessor_fg=#c00090
prettify=astyle -A3 -s$tab_width -t$tab_width \"$source\"
quit_color=#c00000
reg_fg=#000080
reg_title_fg=#800000
reserved_fg=#b00000
run_color=#0000c0
scroll=0
space_fg=#000000
step_color=#0000c0
stop_color=#c00000
string_fg=#ffb000
table_bg=#f0ffff
text_bg=#ffffe3
text_fg=#000060
tooltip_bg=#ffffd0
tree_bg=#e0fafa
variable_font=Arial
windows=false

[asmdata]
columns=16
floating=false
visible=true

[backtrace]
visible=false

[bitbucket]
floating=false
visible=false

[build]
_01=" In order to make any changes to build rules you must set"
_02=" build/expert to true.  Otherwise, ebe will reset all your"
_03=" changes to the defaults when it starts.  This was done to"
_04=" make it easier to propagate build rule changes for people."
_05=" It is onerous to explain to people how to edit .ebe.ini."
_06=" Most people can ignore its existence."
_07=
_08=" There is a separate .ebe.ini in each directory where you"
_09=" execute ebe.  If you have problems with expert mode, it may"
_10=" be useful to start ebe in a new directory to generate defaults"
_11=" and compare the build rules for the new file and the expert file."
_12=
_13=" You can choose between a few alternative build scenarios."
_14=
_15=" On 32 bit Linux systems you can choose to use either nasm or as."
_16=" To do this change the setting for build/asm to be the same"
_17=" as build/asm_as or build/asm_nasm (the default)."
_18=
_19=" On 64 bit Linux you can choose to either use 32 or 64 bit"
_20=" assemblers and also choose which assembler to use."
_21=" This requires installing g++-multilib and possibly 32 bit"
_22=" versions of libc and libstdc++."
_23=
_24=" If you want to use 32 bit tools you need to set build/wordSize"
_25=" to 32.  If you want to use as instead of nasm you need to set "
_26=" build/assembler to as.  It would be possible to determine these"
_27=" choices from other variables, but this was easier to implement."
_28=
_29=" After that you need to select the proper build/asm and"
_30=" build/asmld commands if your program starts with _start. "
_31=" The choices for build/asm are build/asm_nasm_64, "
_32=" build/asm_nasm_32, build/asm_as_64 and build/asm_as_32."
_33=" The choices for build/asmld are build/asmld_64 and "
_34=" build/asmld_32."
_35=
_36=" If you program starts with main, it will be linked with gcc."
_37=" This means you must select the proper build/cc, build/asm,"
_38=" The choices for build/cc are build/cc_64 and build/cc_32."
_39=" and build/ccld commands for your choice."
_40=" The choices for build/asm are build/asm_nasm_64, "
_41=" build/asm_nasm_32, build/asm_as_64 and build/asm_as_32."
_42=" The choices for build/asmld are build/asmld_64 and "
_43=" build/asmld_32."
_44=
asm=nasm -DOSX -P \"$ebe_inc\" -f macho64 -o \"$base.o\" -l \"$base.lst\" \"$source\"
asmld=ld -macosx_version_min 10.6 -o \"$base\"
assembler=nasm
cc=gcc -g -c -Wfatal-errors -Wall -O0 -o \"$base.o\" \"$source\"
ccld="gcc -g -o \"$base\" "
cpp=g++ -g -c -Wfatal-errors -Wall -O0 -o \"$base.o\" \"$source\"
cppld=g++ -g -o \"$base\"
expert=false
fortran=g95 -g -c -Wfatal-errors -Wall -O0 -o \"$base.o\" \"$source\"
fortranld="g95 -g -o \"$base\" "
hal=nasm -DOSX -P \"$ebe_inc\" -P hal.inc -f macho64 -o \"$base.o\" -l \"$base.lst\" \"$source\"
halld=ld -macosx_version_min 10.6 -o \"$base\"
libs=-lstdc++
obj=o
word_size=64

[check]
tools=true

[command]
visible=true

[complete]
minimum=7

[console]
floating=false
visible=true

[cursor]
CalculateVoltage=296
CalculateVoltage.asm=2070
HelloWorld=0
IntegerSequence.asm=335
OhmsLaw.asm=588
hello=@Invalid()
hello.asm=0
hello.cpp=0

[data]
columns=16
floating=false
visible=false

[ebe]
geometry=@ByteArray(\x1\xd9\xd0\xcb\0\x3\0\0\0\0\0\0\0\0\0\x17\0\0\x4\xff\0\0\x3\x1f\0\0\0\0\0\0\0+\0\0\x5\\\0\0\x3\x82\0\0\0\0\x2\0\0\0\x5\0\0\0\0\0\0\0\0-\0\0\x4\xff\0\0\x3\x1f)
state="@ByteArray(\0\0\0\xff\0\0\0\0\xfd\0\0\0\x1\0\0\0\0\0\0\0\xcb\0\0\x2\xac\xfc\x2\0\0\0\r\xfb\0\0\0\x1a\0\x41\0s\0s\0\x65\0m\0\x62\0l\0y\0 \0\x44\0\x61\0t\0\x61\x1\0\0\0,\0\0\0|\0\0\0|\0\xff\xff\xff\xfb\0\0\0\x14\0\x43\0/\0\x43\0+\0+\0 \0\x44\0\x61\0t\0\x61\0\0\0\0\0\xff\xff\xff\xff\0\0\0|\0\xff\xff\xff\xfb\0\0\0\x12\0R\0\x65\0g\0i\0s\0t\0\x65\0r\0s\x1\0\0\0\xad\0\0\0|\0\0\0|\0\xff\xff\xff\xfb\0\0\0\x1a\0H\0\x41\0L\0 \0R\0\x65\0g\0i\0s\0t\0\x65\0r\0s\0\0\0\0\0\xff\xff\xff\xff\0\0\0|\0\xff\xff\xff\xfb\0\0\0$\0H\0\x41\0L\0 \0R\0\x65\0g\0i\0s\0t\0\x65\0r\0 \0N\0\x61\0m\0\x65\0s\0\0\0\0\0\xff\xff\xff\xff\0\0\0t\0\xff\xff\xff\xfb\0\0\0\x16\0S\0t\0\x61\0\x63\0k\0 \0\x46\0r\0\x61\0m\0\x65\0\0\0\x1]\0\0\0|\0\0\0|\0\xff\xff\xff\xfb\0\0\0\x30\0\x46\0l\0o\0\x61\0t\0i\0n\0g\0 \0P\0o\0i\0n\0t\0 \0R\0\x65\0g\0i\0s\0t\0\x65\0r\0s\0\0\0\0\0\xff\xff\xff\xff\0\0\0|\0\xff\xff\xff\xfb\0\0\0\xe\0P\0r\0o\0j\0\x65\0\x63\0t\0\0\0\x1\xaf\0\0\0|\0\0\0|\0\xff\xff\xff\xfb\0\0\0\x14\0\x42\0\x61\0\x63\0k\0 \0T\0r\0\x61\0\x63\0\x65\0\0\0\0\0\xff\xff\xff\xff\0\0\0|\0\xff\xff\xff\xfb\0\0\0\x10\0T\0\x65\0r\0m\0i\0n\0\x61\0l\0\0\0\x1\xf4\0\0\0\xca\0\0\0\xab\0\xff\xff\xff\xfb\0\0\0\xe\0T\0o\0y\0 \0\x42\0o\0x\0\0\0\0\0\xff\xff\xff\xff\0\0\0\xfa\0\xff\xff\xff\xfb\0\0\0\x14\0\x42\0i\0t\0 \0\x42\0u\0\x63\0k\0\x65\0t\0\0\0\0\0\xff\xff\xff\xff\0\0\0\xcb\0\xff\xff\xff\xfb\0\0\0\xe\0\x43\0o\0n\0s\0o\0l\0\x65\x1\0\0\x1.\0\0\x1\xaa\0\0\0\x96\0\xff\xff\xff\0\0\x4\x4\0\0\x2\xac\0\0\0\x4\0\0\0\x4\0\0\0\b\0\0\0\b\xfc\0\0\0\x2\0\0\0\x1\0\0\0\x1\0\0\0 \0T\0\x65\0m\0p\0l\0\x61\0t\0\x65\0 \0t\0o\0o\0l\0\x62\0\x61\0r\x3\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x2\0\0\0\x3\0\0\0\x18\0\x46\0i\0l\0\x65\0 \0t\0o\0o\0l\0\x62\0\x61\0r\x1\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x18\0\x45\0\x64\0i\0t\0 \0t\0o\0o\0l\0\x62\0\x61\0r\x1\0\0\x1\xe9\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x1a\0\x44\0\x65\0\x62\0u\0g\0 \0t\0o\0o\0l\0\x62\0\x61\0r\x1\0\0\x4\x42\xff\xff\xff\xff\0\0\0\0\0\0\0\0)"

[edit]
auto_indent=true
tab_width=4

[float]
floating=false
visible=false

[frame]
floating=false
visible=false

[halnames]
floating=false
visible=false

[halregister]
floating=false
visible=false

[library]
path=:/library

[project]
auto_open=true
floating=false
visible=false

[register]
columns=4
fg=#c09000
floating=false
visible=true

[scroll]
CalculateVoltage=0
CalculateVoltage.asm=0
HelloWorld=0
IntegerSequence.asm=0
OhmsLaw.asm=0
hello=@Invalid()
hello.asm=0
hello.cpp=0

[terminal]
floating=false
name=
use=false
visible=false

[toolbars]
icon_size=32

[tooltips]
visible=true

[toybox]
floating=false
visible=false

[xmm]
reverse=false
